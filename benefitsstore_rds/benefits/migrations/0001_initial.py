# Generated by Django 3.2.8 on 2022-06-20 06:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_employee', models.BooleanField(default=False)),
                ('is_business', models.BooleanField(default=False)),
                ('is_serviceprovider', models.BooleanField(default=False)),
                ('is_ownstaff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Benefits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=1000)),
                ('price', models.IntegerField()),
                ('numberPurchased', models.IntegerField()),
                ('imageurl', models.URLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('tags', models.TextField(blank=True, max_length=1000)),
                ('is_active', models.BooleanField(default=False)),
                ('is_product', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BenefitsProviderCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='BenefitsProviderUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceCompany', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='serviceProviderAccounts', to='benefits.benefitsprovidercompany')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=64)),
                ('standard_points', models.IntegerField(blank=True)),
                ('validEmployeeIDList', models.TextField(blank=True)),
                ('validEmployeeIDList_Used', models.TextField(blank=True)),
                ('subscriptionStatus', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID', models.CharField(max_length=64)),
                ('addressLineOne', models.CharField(blank=True, max_length=255)),
                ('addressLineTwo', models.CharField(blank=True, max_length=255)),
                ('postalcode', models.CharField(blank=True, max_length=16)),
                ('points', models.IntegerField()),
                ('cart', models.CharField(blank=True, max_length=255)),
                ('benefits', models.CharField(blank=True, max_length=255)),
                ('company', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='benefits.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('addressLineOne', models.CharField(blank=True, max_length=255)),
                ('addressLineTwo', models.CharField(blank=True, max_length=255)),
                ('postalcode', models.CharField(blank=True, max_length=16)),
                ('transactionDateTime', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.employeeuser')),
                ('buyerCompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.company')),
                ('listingID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.benefits')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.benefitsprovidercompany')),
            ],
        ),
        migrations.CreateModel(
            name='RedemptionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityRedeemed', models.IntegerField()),
                ('redemptionDateTime', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.employeeuser')),
                ('buyerCompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.company')),
                ('listingID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.benefits')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='benefits.benefitsprovidercompany')),
            ],
        ),
        migrations.CreateModel(
            name='InternalStaffUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionTitle', models.CharField(max_length=64)),
                ('businessFunction', models.CharField(max_length=64)),
                ('admin', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=1000)),
                ('quantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('numberPurchased', models.IntegerField()),
                ('imageurl', models.URLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('tags', models.TextField(blank=True, max_length=1000)),
                ('is_active', models.BooleanField(default=False)),
                ('is_product', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='benefits.categories')),
                ('posted_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='benefits.benefitsprovideruser')),
                ('provider', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='benefits.benefitsprovidercompany')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='HRaccounts', to='benefits.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='benefits',
            name='category',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefitsList', to='benefits.categories'),
        ),
        migrations.AddField(
            model_name='benefits',
            name='posted_by',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='postedBenefits', to='benefits.benefitsprovideruser'),
        ),
        migrations.AddField(
            model_name='benefits',
            name='provider',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefitsList', to='benefits.benefitsprovidercompany'),
        ),
    ]
